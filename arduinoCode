#include <EEPROM.h>
#include "U8glib.h"
U8GLIB_SH1106_128X64 u8g(13, 11, 10, 9, 8);  // SW SPI Com: SCK = 13, MOSI = 11, CS = 10, A0 = 9

const unsigned char bitmap_pg5i4[] PROGMEM = {
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,  
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,  
0x00,0x00,0x00,0x00,0x60,0x00,0x00,0x00,  
0x00,0x00,0x0E,0x00,0xF8,0x00,0x00,0x00,  
0x00,0x00,0x1F,0xFF,0xFC,0x1C,0x00,0x00, 
0x00,0x00,0x1F,0xFF,0xFF,0xFE,0x00,0x00,  
0x00,0x00,0x0F,0xFF,0xFF,0xFE,0x00,0x00, 
0x00,0x00,0x0F,0xFF,0xFF,0xFE,0x00,0x00, 
0x00,0x00,0x00,0x03,0xFF,0xFC,0x00,0x00,  
0x00,0x00,0x00,0x01,0xF8,0x00,0x00,0x00, 
0x00,0x00,0x00,0x00,0xF0,0x00,0x00,0x00,  
0x00,0x00,0x00,0x00,0xF0,0x00,0x00,0x00,  
0x00,0x00,0x00,0x01,0xFC,0x00,0x00,0x00,  
0x00,0x00,0x00,0x03,0xFE,0x00,0x00,0x00,  
0x00,0x00,0x00,0x07,0xFE,0x00,0x00,0x00, 
0x00,0x00,0x00,0x03,0xFE,0x00,0x00,0x00,  
0x00,0x00,0x00,0x03,0xFC,0x00,0x00,0x00,  
0x01,0xF0,0x00,0x03,0xFC,0x00,0x00,0x00,  
0x03,0xF8,0x00,0x0F,0xFF,0x00,0x00,0x00, 
0x07,0xFC,0x00,0x1F,0xFF,0x80,0x00,0x00, 
0x0F,0xFC,0x00,0x3F,0xFF,0xC0,0x00,0x00,  
0x0F,0xFF,0xFF,0xFF,0xFF,0xF0,0x00,0x00,  
0x1F,0xFF,0xFF,0xFF,0xFF,0xFF,0xE0,0x00,  
0x1F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0x00,  
0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x80,  
0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xC0,  
0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xE0,  
0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xE0,  
0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xF0,  
0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xF0,  
0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xF8,  
0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xF8,  
0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xF8,  
0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xF8,  
0x3F,0xFF,0xFF,0xFF,0xFF,0xF7,0xFF,0xF8,  
0x3F,0xFF,0xFF,0xFF,0xFF,0xE0,0x7F,0xF8,  
0x3F,0xFF,0xFF,0xFF,0xFF,0xC0,0x7F,0xF8,  
0x1F,0xFE,0x00,0x3F,0xFF,0x80,0x3F,0xF8,  
0x1F,0xFC,0x00,0x1F,0xFF,0x00,0x3F,0xF8,  
0x0F,0xFC,0x00,0x07,0xFC,0x00,0x7F,0xF8, 
0x07,0xF8,0x00,0x00,0x00,0x00,0xFF,0xFC, 
0x03,0xF0,0x00,0x00,0x00,0x00,0xFF,0xFC,  
0x00,0xE0,0x00,0x00,0x00,0x00,0xFF,0xFC,  
0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xF8, 
0x00,0x00,0x00,0x00,0x00,0x00,0x7F,0xF8, 
0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0xE0, 
0x00,0x00,0x00,0x00,0x00,0x00,0x04,0x00,  
0x00,0x00,0x00,0x00,0x00,0x00,0x0C,0x00,  
0x00,0x00,0x00,0x00,0x00,0x00,0x0C,0x00,  
0x00,0x00,0x00,0x00,0x00,0x00,0x0C,0x00,  
0x00,0x00,0x00,0x00,0x00,0x00,0x1E,0x00,  
0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0x00, 
0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0x00, 
0x00,0x00,0x00,0x00,0x00,0x00,0x3F,0x80,  
0x00,0x00,0x00,0x00,0x00,0x00,0x3F,0xC0,  
0x00,0x00,0x00,0x00,0x00,0x00,0x7F,0xC0,  
0x00,0x00,0x00,0x00,0x00,0x00,0x7F,0xC0,  
0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xE0, 
0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xC0,  
0x00,0x00,0x00,0x00,0x00,0x00,0x7F,0xC0,  
0x00,0x00,0x00,0x00,0x00,0x00,0x7F,0xC0,  
0x00,0x00,0x00,0x00,0x00,0x00,0x3F,0x80,  
0x00,0x00,0x00,0x00,0x00,0x00,0x0E,0x00,  
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 
};

void opener() {
    u8g.setRot180();
    u8g.firstPage();  
    do {
      u8g.setColorIndex(1);
      u8g.drawRBox(0,3,128,58,5);
      u8g.setFont(u8g_font_gdr11);
      u8g.setColorIndex(0);
      u8g.drawStr(3, 27, "       KLAUS W         ");
      u8g.setFont(u8g_font_courB08);
      u8g.drawStr(3, 43, "Pflanzenbewaesserung ");
      u8g.drawStr(3, 54, "        1.0           ");
        } while( u8g.nextPage() );
        delay(50);
    }

void sensorf() {
      u8g.setRot180();
      u8g.firstPage();  
  do {
      u8g.setColorIndex(1);
      u8g.drawRBox(0,3,128,58,5);
      u8g.setFont(u8g_font_gdr11);
      u8g.setColorIndex(0);
      u8g.drawStr(3, 27, "      SENSOR??         ");
      } while( u8g.nextPage() );
    }

void watering(int dauer) {
    u8g.setRot180();
    u8g.firstPage();  
  do {
      u8g.setColorIndex(1);
      u8g.drawBitmapP(32, 0, 8, 64, bitmap_pg5i4);
  } while( u8g.nextPage() ); 
  
  analogWrite(3, 120);
  delay(200);
  analogWrite(3, 170);
  delay(200);
  analogWrite(3, 220);
  delay(dauer);
  do {
    delay(100);
  } while (digitalRead(4)==LOW && digitalRead(5)==LOW);
  analogWrite(3, 170);
  delay(200);
  analogWrite(3, 120);
  delay(200);
  analogWrite(3, 0);
    } 

void disp(int j, int k, int l, int m, int n) {  // disp(Istwert, Sollwert, Status 1-2, Volumen, abgel. Zeit)
      u8g.setRot180();
      u8g.firstPage();  
      do {
      u8g.setColorIndex(1);
      u8g.setFont(u8g_font_baby);
      switch (l){
        case 1:
      u8g.drawStr(1, 10, "Feuchtemessung...");
      break;
        case 2:
      u8g.drawStr(1, 10, "Warten...");
      break;
      }
      u8g.drawStr(80, 10,"Vol.:     dm3");
      u8g.setPrintPos(100, 10); 
      u8g.print(m);
      u8g.drawStr(3, 20, "Bodenfeuchte Istwert[%]");
      u8g.drawStr(3, 45, "Bodenfeuchte Sollwert[%]");
      u8g.setFont(u8g_font_tpss);
      u8g.drawRFrame(1,22,106,16,5);
      u8g.drawBox(4,25,j,10);
      u8g.setPrintPos(110, 34); 
      u8g.print(j);
      u8g.drawRFrame(1,47,106,16,5);
      u8g.drawBox(4,50,k,10);
      u8g.setPrintPos(110, 59); 
      u8g.print(k);
      u8g.drawLine(0,0,n,0);
      } while( u8g.nextPage() );
    }
   

void button() {
int Vol = EEPROM.read(0);
int Soll = EEPROM.read(1);

if (digitalRead(4)==LOW && digitalRead(5)==LOW) {
  watering(500); 
}

if (digitalRead(4)==LOW) {
  Soll = Soll -1;
  if (Soll <1) { 
    Soll = 1; 
    }
  EEPROM.write(1, Soll);
}

if (digitalRead(5)==LOW) {
  Soll = Soll +1;
  if (Soll >100) { 
    Soll = 100; 
    }
  EEPROM.write(1, Soll);
}

if (digitalRead(6)==LOW) {
  Vol = Vol -1;
  if (Vol <1) { 
    Vol = 1; 
    }
  EEPROM.write(0, Vol);
}

if (digitalRead(7)==LOW) {
  Vol = Vol +1;
  if (Vol >5) { 
    Vol = 5; 
    }
  EEPROM.write(0, Vol);
}
delay(250);
}

int sensorin() {
  int moist = 100-((analogRead(A0)-350)/2); // 350 = "nass"; 550 = "trocken"
  if (moist < -50 || moist > 150)
  {
    sensorf();
    moist = 0;
  delay(3000);
  }
  if (moist < 0)
  {
    moist = 0;
  }
  if (moist > 100)
  {
    moist = 100;
  }
  return moist;
}

void setup() {

  if (EEPROM.length() ==0) 
 {
  EEPROM.write(0, 1);
  EEPROM.write(1, 50);
 }
 #if defined(ARDUINO)
  pinMode(13, OUTPUT);           
  digitalWrite(13, HIGH);  
 #endif

  pinMode(3, OUTPUT); //zum MOSFET - Pumpe
  pinMode(A0, INPUT); //Kapazitiver Erdfeuchtigkeitssensor
  pinMode(4,INPUT_PULLUP); // FSoll -
  pinMode(5,INPUT_PULLUP); // FSoll +
  pinMode(6,INPUT_PULLUP); // Vol -
  pinMode(7,INPUT_PULLUP); // Vol +
}

void loop() {

  int stdauer = 2000; // Standard-Messzeit 2000 * 100 msec 
  long wdauer = 2000; 
  long a = 0;
  int stat = 1;
  int Vol = EEPROM.read(0);
  int Soll = EEPROM.read(1);
  long moistAv = 0;
  
  opener();
  delay(1000);
  watering(500);
  
  messung:

if (digitalRead(4) == LOW || digitalRead(5) == LOW || digitalRead(6) == LOW || digitalRead(7) == LOW) {
  button();
  Vol = EEPROM.read(0);
  Soll = EEPROM.read(1);
}
  a = a + 1;
  moistAv=moistAv + sensorin();
  if (a==wdauer) {
    moistAv = moistAv / a;
    if (moistAv < Soll) {
      watering((Soll - moistAv +5)*175*Vol); // Berechnung BewÃ¤sserungsvolumen (-Zeit)
      a=0;
      stat=2;
      wdauer = 3 * (stdauer + stdauer *Vol/(Soll - moistAv)); // Berechnung Wartezeit
      goto messung;
    }
    else {
    a=0;
    stat=1;
    wdauer=stdauer;
    goto messung;
  }
  }

    disp(sensorin(), Soll, stat, Vol, a*128/wdauer);
  
  delay(100);

  goto messung;
  
}
